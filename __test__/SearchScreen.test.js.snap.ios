// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SearchScreen /> should match snapshot 1`] = `
<RNCSafeAreaView
  edges={
    Array [
      "bottom",
      "left",
      "right",
      "top",
    ]
  }
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#c8c8c8",
        "height": "10%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "black",
          "fontSize": 21,
        }
      }
    >
       Search 
    </Text>
  </View>
  <View
    collapsable={false}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "green",
        "borderRadius": 4,
        "elevation": 4,
        "flexDirection": "row",
        "margin": 10,
        "padding": 10,
        "shadowColor": "#000000",
        "shadowOffset": Object {
          "height": 3,
          "width": 0,
        },
        "shadowOpacity": 0.24,
        "shadowRadius": 4,
        "width": "95%",
      }
    }
  >
    <View
      accessibilityLabel="search"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            undefined,
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text />
      </View>
    </View>
    <TextInput
      accessibilityRole="search"
      accessibilityTraits="search"
      keyboardAppearance="light"
      placeholder="Text here"
      placeholderTextColor="#c8c8c8"
      returnKeyType="search"
      selectionColor="#6200ee"
      style={
        Array [
          Object {
            "alignSelf": "stretch",
            "flex": 1,
            "fontSize": 18,
            "minWidth": 0,
            "paddingLeft": 8,
            "textAlign": "left",
          },
          Object {
            "color": "#000000",
            "fontFamily": "System",
            "fontWeight": "400",
          },
          Object {
            "backgroundColor": "yellow",
          },
        ]
      }
      underlineColorAndroid="transparent"
    />
    <View
      accessibilityLabel="clear"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "disabled": true,
        }
      }
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 6,
          "left": 6,
          "right": 6,
          "top": 6,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Array [
            Object {
              "alignItems": "center",
              "justifyContent": "center",
              "margin": 6,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 18,
              "height": 36,
              "width": 36,
            },
            Object {
              "opacity": 0.32,
            },
            undefined,
          ],
        ]
      }
    >
      <View>
        <Text />
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "red",
        "flexDirection": "row",
        "height": "100%",
        "margin": 10,
        "padding": 10,
        "width": "95%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "data": Array [
              "5K",
              "10K",
              "15K",
            ],
            "title": "Running",
          },
          Object {
            "data": Array [
              "25m",
              "50m",
              "100m",
              "200m",
              "500m",
            ],
            "title": "Swimming",
          },
        ]
      }
      getItem={[Function]}
      getItemCount={[Function]}
      keyExtractor={[Function]}
      onContentSizeChange={[Function]}
      onLayout={[Function]}
      onMomentumScrollBegin={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={
        Array [
          0,
          5,
        ]
      }
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(247,247,247,1.0)",
                "fontSize": 14,
                "fontWeight": "bold",
                "paddingBottom": 2,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 2,
              }
            }
          >
            Running
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            5K
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            10K
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            15K
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        />
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "backgroundColor": "rgba(247,247,247,1.0)",
                "fontSize": 14,
                "fontWeight": "bold",
                "paddingBottom": 2,
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingTop": 2,
              }
            }
          >
            Swimming
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            25m
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            50m
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            100m
          </Text>
        </View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <Text
            style={
              Object {
                "fontSize": 18,
                "height": 44,
                "padding": 10,
              }
            }
          >
            200m
          </Text>
        </View>
        <View
          style={
            Object {
              "height": 0,
            }
          }
        />
      </View>
    </RCTScrollView>
  </View>
</RNCSafeAreaView>
`;
